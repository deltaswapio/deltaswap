syntax = "proto3";
package deltaswapio.deltachain.deltaswap;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "deltaswap/phylax.proto";
import "deltaswap/config.proto";
import "deltaswap/replay_protection.proto";
import "deltaswap/sequence_counter.proto";
import "deltaswap/consensus_phylax_set_index.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/deltaswapio/deltachain/x/deltaswap/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a phylaxSet by index.
	rpc PhylaxSet(QueryGetPhylaxSetRequest) returns (QueryGetPhylaxSetResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/phylaxSet/{index}";
	}

	// Queries a list of phylaxSet items.
	rpc PhylaxSetAll(QueryAllPhylaxSetRequest) returns (QueryAllPhylaxSetResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/phylaxSet";
	}

// Queries a config by index.
	rpc Config(QueryGetConfigRequest) returns (QueryGetConfigResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/config";
	}
// Queries a replayProtection by index.
	rpc ReplayProtection(QueryGetReplayProtectionRequest) returns (QueryGetReplayProtectionResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/replayProtection/{index}";
	}

	// Queries a list of replayProtection items.
	rpc ReplayProtectionAll(QueryAllReplayProtectionRequest) returns (QueryAllReplayProtectionResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/replayProtection";
	}

// Queries a sequenceCounter by index.
	rpc SequenceCounter(QueryGetSequenceCounterRequest) returns (QueryGetSequenceCounterResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/sequenceCounter/{index}";
	}

	// Queries a list of sequenceCounter items.
	rpc SequenceCounterAll(QueryAllSequenceCounterRequest) returns (QueryAllSequenceCounterResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/sequenceCounter";
	}

// Queries a ConsensusPhylaxSetIndex by index.
	rpc ConsensusPhylaxSetIndex(QueryGetConsensusPhylaxSetIndexRequest) returns (QueryGetConsensusPhylaxSetIndexResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/consensus_phylax_set_index";
	}
// Queries a PhylaxValidator by index.
	rpc PhylaxValidator(QueryGetPhylaxValidatorRequest) returns (QueryGetPhylaxValidatorResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/phylax_validator/{phylaxKey}";
	}

	// Queries a list of PhylaxValidator items.
	rpc PhylaxValidatorAll(QueryAllPhylaxValidatorRequest) returns (QueryAllPhylaxValidatorResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/phylax_validator";
	}

// Queries a list of LatestPhylaxSetIndex items.
	rpc LatestPhylaxSetIndex(QueryLatestPhylaxSetIndexRequest) returns (QueryLatestPhylaxSetIndexResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/latest_phylax_set_index";
	}

	rpc AllowlistAll(QueryAllValidatorAllowlist) returns (QueryAllValidatorAllowlistResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/allowlist";
	}

	rpc Allowlist(QueryValidatorAllowlist) returns (QueryValidatorAllowlistResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/allowlist/{validator_address}";
	}

	rpc IbcComposabilityMwContract(QueryIbcComposabilityMwContractRequest) returns (QueryIbcComposabilityMwContractResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/ibc_composability_mw_contract";
	}

	rpc WasmInstantiateAllowlistAll(QueryAllWasmInstantiateAllowlist) returns (QueryAllWasmInstantiateAllowlistResponse) {
		option (google.api.http).get = "/deltaswapio/deltachain/deltaswap/wasm_instantiate_allowlist";
	}

// this line is used by starport scaffolding # 2
}

message QueryAllValidatorAllowlist {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// all allowlisted entries by all validators
message QueryAllValidatorAllowlistResponse {
	repeated ValidatorAllowedAddress allowlist = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryValidatorAllowlist {
	string validator_address = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// all allowlisted entries by a specific validator
message QueryValidatorAllowlistResponse {
	string validator_address = 1;
	repeated ValidatorAllowedAddress allowlist = 2;
	cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message QueryGetPhylaxSetRequest {
	uint32 index = 1;
}

message QueryGetPhylaxSetResponse {
	PhylaxSet PhylaxSet = 1 [(gogoproto.nullable) = false];
}

message QueryAllPhylaxSetRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPhylaxSetResponse {
	repeated PhylaxSet PhylaxSet = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetConfigRequest {}

message QueryGetConfigResponse {
	Config Config = 1 [(gogoproto.nullable) = false];
}
message QueryGetReplayProtectionRequest {
	  string index = 1;

}

message QueryGetReplayProtectionResponse {
	ReplayProtection replayProtection = 1 [(gogoproto.nullable) = false];
}

message QueryAllReplayProtectionRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReplayProtectionResponse {
	repeated ReplayProtection replayProtection = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSequenceCounterRequest {
	  string index = 1;

}

message QueryGetSequenceCounterResponse {
	SequenceCounter sequenceCounter = 1 [(gogoproto.nullable) = false];
}

message QueryAllSequenceCounterRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSequenceCounterResponse {
	repeated SequenceCounter sequenceCounter = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetConsensusPhylaxSetIndexRequest {}

message QueryGetConsensusPhylaxSetIndexResponse {
	ConsensusPhylaxSetIndex ConsensusPhylaxSetIndex = 1 [(gogoproto.nullable) = false];
}
message QueryGetPhylaxValidatorRequest {
	  bytes phylaxKey = 1;

}

message QueryGetPhylaxValidatorResponse {
	PhylaxValidator phylaxValidator = 1 [(gogoproto.nullable) = false];
}

message QueryAllPhylaxValidatorRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPhylaxValidatorResponse {
	repeated PhylaxValidator phylaxValidator = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryLatestPhylaxSetIndexRequest {
}

message QueryLatestPhylaxSetIndexResponse {
  uint32 latestPhylaxSetIndex = 1;
}

message QueryIbcComposabilityMwContractRequest {
}

message QueryIbcComposabilityMwContractResponse {
	string contractAddress = 1;
}

message QueryAllWasmInstantiateAllowlist {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// all allowlisted entries by all validators
message QueryAllWasmInstantiateAllowlistResponse {
	repeated WasmInstantiateAllowedContractCodeId allowlist = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
